<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="464" height="522"
			   title="Image Viewer"
			   creationComplete="initializeApp()">
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import dataTypes.place.ImageURL;
			
			import mx.collections.ArrayList;
			
			import spark.events.IndexChangeEvent;
			
			public var kitURL:String = null;
			
			[Bindable]
			public var imageObjectArray:ArrayList = new ArrayList();
			
			private var imageArrayArray:ArrayList;
			
			[Bindable]
			public var imageArray:ArrayList;
						
			protected function initializeApp():void {
				this.move(500, 400);
				
				imageArrayArray = new ArrayList();
				
				for (var i:int = 0; i < imageObjectArray.length; i++) {
					var imageObj:Object = imageObjectArray.getItemAt(i) as Object;
					imageArrayArray.addItem(imageObj.imageArray);
				}
				
				attributesDropdown.prompt = "Select attribute";
				imageList.prompt = "Select image";
				
			}
						
			protected function imagePanel_mouseDownHandler(event:MouseEvent):void
			{
				if (dragButton.label == "fix") {
					imageView.startDrag(false);					
				}
			}
			
			protected function imagePanel_mouseUpHandler(event:MouseEvent):void
			{
				if (dragButton.label == "fix") {
					imageView.stopDrag();									
				}
			}	
			
			protected function resetButton_clickHandler(event:MouseEvent):void
			{
				resetView();
			}
			
			protected function resetView():void {
				var w0:Number = imagePanel.width;
				var h0:Number = imagePanel.height - 33;		// 33 is the size of title column
				var w1:Number = imageView.width;
				var h1:Number = imageView.height;
				
				var hw0:Number = h0 / w0;
				var hw1:Number = h1 / w1;
				
				var s:Number;
				
				// if horizontal ratio is larger than vertical of the panel,
				if (hw0 < hw1) 
					s = h0 / h1;
				else
					s = w0 / w1;
				
				imageView.scaleX = imageView.scaleY = s;
				
				imageView.x = (w0 - s * w1) / 2.0;
				imageView.y = (h0 - s * h1) / 2.0;				
				
			}
			
			
			
			protected function largerButton_clickHandler(event:MouseEvent):void
			{				
				scallingAtCenter(1.25, 225, 150);				
			}
			
			
			protected function smallerButton_clickHandler(event:MouseEvent):void
			{				
				scallingAtCenter(0.8, 225, 150);				
			}
			
			
			protected function scallingAtCenter(s:Number, cx:Number, cy:Number):void 
			{				
				imageView.scaleX = s * imageView.scaleX;
				imageView.scaleY = s * imageView.scaleY;
				
				var lx:Number = cx - imageView.x;
				var ly:Number = cy - imageView.y;
				
				imageView.x = imageView.x - (s * lx - lx);
				imageView.y = imageView.y - (s * ly - ly);					
			}
			
			
			protected function dragButton_clickHandler(event:MouseEvent):void
			{
				if (dragButton.label == "fix") { 
					dragButton.label = "pan";
					Mouse.cursor = "arrow";
				}
				else {
					dragButton.label = "fix";
					Mouse.cursor = "hand";
				}
			}
			
			protected function imageList_changeHandler(event:IndexChangeEvent):void
			{
				var imageIndex:int = imageList.selectedIndex;
				if (imageIndex == -1) return;
				
				var imageFilePath:Object = imageArray.getItemAt(imageIndex) as Object;
				var imageURL:String = kitURL + imageFilePath.value;
				var wiFile:File = new File(imageURL);
				imageView.load(imageURL);
				imageView.addEventListener(Event.RESIZE, onResize);	

			}
			
			private function onResize(event:Event):void {
				// This means that image loading was completed and the image was resized, then				
				//put imageView inside center of the panel
				resetView();
			}
			
			protected function text_jp_clickHandler(event:MouseEvent):void
			{
				var request:URLRequest = new URLRequest("documents/jp/imageViewer_jp.html");
				navigateToURL(request);
			}
			
			protected function text_en_clickHandler(event:MouseEvent):void
			{
				var request:URLRequest = new URLRequest("documents/en/imageViewer_en.html");
				navigateToURL(request);
			}
			
			protected function attributesDropdown_changeHandler(event:IndexChangeEvent):void
			{
				var index:int = attributesDropdown.selectedIndex;
				
				var imageObj:Object = imageObjectArray.getItemAt(index) as Object;
				imageArray = imageObj.imageArray as ArrayList;
			}
			
		]]>
	</fx:Script>
	
	<s:Image x="14" y="7" source="@Embed(source='images/pictRepresentation1.png')" />
	<s:Label x="81" y="15" text="Images" fontSize="16"/>
	<s:Label right="58" top="10" buttonMode="true" click="text_jp_clickHandler(event)"
			 color="#969696" fontFamily="Osaka" fontSize="11" text="日本語"/>
	<s:Label right="10" top="12" buttonMode="true" click="text_en_clickHandler(event)"
			 color="#969696" text="English"/>

	<s:Panel id="imagePanel" left="6" right="6" top="100" bottom="6" chromeColor="#444444"
			 color="#FFFFFF" dropShadowVisible="false"
			 mouseDown="imagePanel_mouseDownHandler(event)"
			 mouseUp="imagePanel_mouseUpHandler(event)" title="Image Panel">
		<s:Group clipAndEnableScrolling="true" width="100%" height="100%" visible="true" id="imageBox">
			<mx:Image id="imageView"/>
		</s:Group>
		<s:Button id="resetButton" right="5" top="-26" width="35" label="-" chromeColor="#dadada"
				  click="resetButton_clickHandler(event)" color="#000000" cornerRadius="0"/>
		<s:Button id="largerButton" right="44" top="-26" width="35" label="&lt;"
				  chromeColor="#dadada" click="largerButton_clickHandler(event)" color="#000000"
				  cornerRadius="2"/>
		<s:Button id="smallerButton" right="83" top="-26" width="35" label="&gt;"
				  chromeColor="#dadada" click="smallerButton_clickHandler(event)" color="#000000"
				  cornerRadius="2"/>
		<s:Button id="dragButton" right="122" top="-26" width="42" label="pan" chromeColor="#dadada"
				  click="dragButton_clickHandler(event)" color="#000000" cornerRadius="2"/>
	</s:Panel>
	<s:DropDownList id="imageList" right="5" top="71" width="220" height="20"
					change="imageList_changeHandler(event)" dataProvider="{imageArray}"
					labelField="value"></s:DropDownList>
	<s:DropDownList id="attributesDropdown" right="5" top="40" width="220"
					change="attributesDropdown_changeHandler(event)"
					dataProvider="{imageObjectArray}" labelField="attName"></s:DropDownList>
	<s:Label right="234" top="77" fontSize="12" text="List"/>
	<s:Label right="234" top="45" text="Attributes"/>
</s:Window>
